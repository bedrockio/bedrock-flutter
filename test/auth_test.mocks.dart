// Mocks generated by Mockito 5.4.2 from annotations
// in bedrock_flutter/test/auth_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:bedrock_flutter/src/auth/auth_repository.dart' as _i4;
import 'package:bedrock_flutter/src/auth/model/login_response_model.dart'
    as _i3;
import 'package:bedrock_flutter/src/network/api_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiService_0 extends _i1.SmartFake implements _i2.ApiService {
  _FakeApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoginResponseModel_1 extends _i1.SmartFake
    implements _i3.LoginResponseModel {
  _FakeLoginResponseModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i4.AuthRepository {
  @override
  _i2.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
        returnValueForMissingStub: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i2.ApiService);
  @override
  _i5.Future<bool> register({
    required String? firstName,
    required String? lastName,
    String? phoneNumber,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #phoneNumber: phoneNumber,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> login(String? phoneNumber) => (super.noSuchMethod(
        Invocation.method(
          #login,
          [phoneNumber],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<_i3.LoginResponseModel> loginVerify(
    String? phoneNumber,
    String? code,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginVerify,
          [
            phoneNumber,
            code,
          ],
        ),
        returnValue:
            _i5.Future<_i3.LoginResponseModel>.value(_FakeLoginResponseModel_1(
          this,
          Invocation.method(
            #loginVerify,
            [
              phoneNumber,
              code,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.LoginResponseModel>.value(_FakeLoginResponseModel_1(
          this,
          Invocation.method(
            #loginVerify,
            [
              phoneNumber,
              code,
            ],
          ),
        )),
      ) as _i5.Future<_i3.LoginResponseModel>);
  @override
  _i5.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> deleteUser() => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
